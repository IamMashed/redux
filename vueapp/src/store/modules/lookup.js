import { apiFactory } from '@/api/apiFactory'

const lookupApi = apiFactory.get('lookup')

const state = {
	clients: [],
	cases: [],
	filters: [
		{
			key: [
				'first_name',
				'last_name',
			],
			value: null,
			entity: 'case_client',
			operator: '@@',
			name: 'Full Name',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'email_address',
			value: null,
			entity: 'case_email',
			operator: '=',
			name: 'Email',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: [
				'phone_number_1',
				'phone_number_2',
			],
			value: null,
			entity: 'case_client',
			operator: '=',
			field_type: 'phone_number',
			name: 'Phone Number',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: [
				'sms_alerts_1',
				'sms_alerts_2',
			],
			value: true,
			entity: 'case_client',
			operator: 'is',
			type: 'boolean',
			field_type: 'boolean',
			name: 'SMS alerts',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'id',
			value: 2,
			entity: 'case_client_type',
			operator: '=',
			name: 'Is Active',
			field_type: 'select',
			items: 'clientTypes',
			item_value: 'id',
			item_text: 'name',
			selected: false,
			favorite: false,
			default: true,
		},
		{
			key: 'id',
			value: null,
			entity: 'case_tag',
			operator: 'in',
			type: 'numeric',
			name: 'Tags',
			field_type: 'select',
			items: 'tags',
			item_value: 'id',
			item_text: 'name',
			multiple: true,
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'county',
			value: null,
			entity: 'property',
			operator: '=',
			type: 'numeric',
			name: 'County',
			field_type: 'select',
			items: 'counties',
			item_value: 'id',
			item_text: 'name',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'id',
			value: null,
			entity: 'case_marketing_code',
			operator: '=',
			type: 'numeric',
			name: 'Marketing Code',
			field_type: 'select',
			items: 'marketingCodes',
			item_value: 'id',
			item_text: 'name',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'apn',
			value: null,
			entity: 'case_application',
			operator: '=',
			name: 'APN',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'created_by_id',
			value: null,
			entity: 'case_application',
			operator: 'in',
			type: 'numeric',
			name: 'Case Created by',
			field_type: 'autocomplete',
			items: 'users',
			item_value: 'id',
			item_text: 'username',
			multiple: true,
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'application_type_id',
			value: null,
			entity: 'case_application',
			operator: '=',
			name: 'Application Type',
			field_type: 'autocomplete',
			items: 'applicationTypes',
			item_value: 'id',
			item_text: 'description',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'source_id',
			value: null,
			entity: 'case_application',
			operator: '=',
			name: 'Application Source',
			field_type: 'autocomplete',
			items: 'applicationSources',
			item_value: 'id',
			item_text: 'name',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: '_property_type',
			value: null,
			entity: 'property',
			operator: '=',
			type: 'string',
			name: 'Property Type',
			field_type: 'select',
			items: 'propertyTypes',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'created_at',
			value: null,
			entity: 'case_property',
			operator: '>',
			name: 'Case Created At',
			type: 'date',
			field_type: 'date',
			prefix: {
				field_type: 'select',
				items: ['>', '<', '='],
				model: 'operator',
			},
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: [
				'mailing_line1',
				'mailing_line2',
				'mailing_line3',
				'mailing_city',
				'mailing_state',
				'mailing_zip',
			],
			value: null,
			entity: [
				'case_client',
				'case_application'
			],
			operator: '@@',
			name: 'Mailing Address',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'payment_type_id',
			value: null,
			entity: 'case_property',
			operator: '=',
			name: 'Payment Type',
			field_type: 'autocomplete',
			items: 'paymentTypes',
			item_value: 'id',
			item_text: 'description',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'payment_status_id',
			value: null,
			entity: 'case_property',
			operator: '=',
			name: 'Payment Status',
			field_type: 'autocomplete',
			items: 'paymentStatuses',
			item_value: 'id',
			item_text: 'description',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'default_fee_percent',
			value: null,
			entity: 'case_client',
			operator: '=',
			name: 'Default Fee Percent',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'tax_year',
			value: null,
			entity: 'case_property',
			operator: '=',
			name: 'Tax Year',
			field_type: 'autocomplete',
			items: 'years',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'created_at',
			value: null,
			entity: 'single_cma_workups',
			operator: '=',
			name: 'CMA Workup Created At',
			type: 'date',
			field_type: 'date',
			prefix: {
				field_type: 'select',
				items: ['>', '<', '='],
				model: 'operator',
			},
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'is_primary',
			value: true,
			entity: 'single_cma_workups',
			operator: 'is',
			type: 'boolean',
			name: 'CMA Workup Status',
			field_type: 'select',
			items: 'workupStatuses',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'created_by_id',
			value: null,
			entity: 'case_note',
			operator: 'in',
			name: 'Comment Created By',
			field_type: 'autocomplete',
			items: 'users',
			item_value: 'id',
			item_text: 'username',
			multiple: true,
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'updated_by_id',
			value: null,
			entity: 'case_note',
			operator: 'in',
			name: 'Comment Updated By',
			field_type: 'autocomplete',
			items: 'users',
			item_value: 'id',
			item_text: 'username',
			multiple: true,
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'created_at',
			value: null,
			entity: 'case_note',
			operator: '>',
			name: 'Comment Created At',
			type: 'date',
			field_type: 'date',
			prefix: {
				field_type: 'select',
				items: ['>', '<', '='],
				model: 'operator',
			},
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'updated_at',
			value: null,
			entity: 'case_note',
			operator: '>',
			name: 'Comment Updated At',
			type: 'date',
			field_type: 'date',
			prefix: {
				field_type: 'select',
				items: ['>', '<', '='],
				model: 'operator',
			},
			selected: false,
			favorite: false,
			default: false,
		},
		// {
		// 	key: 'balance',
		// 	value: null,
		// 	entity: 'case_billing',
		// 	operator: '>',
		// 	name: 'Billing Balance',
		// 	type: 'numeric',
		// 	field_type: 'numeric',
		// 	prefix: {
		// 		field_type: 'select',
		// 		items: ['>', '<', '='],
		// 		model: 'operator',
		// 	},
		// 	selected: false,
		// 	favorite: false,
		// 	default: false,
		// },
		// {
		// 	key: 'attorney_fee',
		// 	value: null,
		// 	entity: 'case_billing',
		// 	operator: '>',
		// 	name: 'Billing Attorney Fee',
		// 	type: 'numeric',
		// 	field_type: 'numeric',
		// 	prefix: {
		// 		field_type: 'select',
		// 		items: ['>', '<', '='],
		// 		model: 'operator',
		// 	},
		// 	selected: false,
		// 	favorite: false,
		// 	default: false,
		// },
		// {
		// 	key: 'late_fee',
		// 	value: null,
		// 	entity: 'case_billing',
		// 	operator: '>',
		// 	name: 'Billing Late Fee',
		// 	type: 'numeric',
		// 	field_type: 'numeric',
		// 	prefix: {
		// 		field_type: 'select',
		// 		items: ['>', '<', '='],
		// 		model: 'operator',
		// 	},
		// 	selected: false,
		// 	favorite: false,
		// 	default: false,
		// },
		{
			key: 'hearing_date',
			value: null,
			entity: 'case_property',
			operator: '>',
			name: 'Hearing Date',
			type: 'date',
			field_type: 'date',
			prefix: {
				field_type: 'select',
				items: ['>', '<', '='],
				model: 'operator',
			},
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: [
				'address_line1',
				'address_line2',
				'address_city',
				'address_state',
				'address_zip'
			],
			value: null,
			entity: [
				'case_property',
				'case_application'
			],
			operator: '@@',
			name: 'Property Address',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'pin_code',
			value: null,
			entity: [
				'case_property',
				'case_application',
			],
			operator: '=',
			type: 'string',
			name: 'PIN Code',
			selected: false,
			favorite: false,
			default: false,
		},
		{
			key: 'pin_entered',
			value: true,
			entity: 'case_application',
			operator: 'is',
			type: 'boolean',
			field_type: 'boolean',
			name: 'PIN Entered',
			selected: false,
			favorite: false,
			default: false,
		},
	],
}

const getters = {
	clients: ({ clients }) => clients,
	cases: ({ cases }) => cases,
	filters: ({ filters }) => filters,
}

const mutations = {
	SET_CLIENTS(state, payload) {
		state.clients = payload
	},
	SET_CASES(state, payload) {
		state.cases = payload
	},
	SET_FILTERS(state, payload) {
		state.filters = payload
	},
}

const actions = {
	async lookup({ dispatch }, payload) {
		return await Promise.all([
			dispatch('lookupClients', payload),
			dispatch('lookupCases', payload)
		])
	},
	async lookupClients({ commit, dispatch }, payload) {
		try {
			const { data } = await lookupApi.clients(payload)
			commit('SET_CLIENTS', data)
		} catch (error) {
			dispatch('notify', {
				text: 'Can not lookup clients',
				color: 'error'
			}, { root: true })
		}
	},
	async lookupCases({ commit, dispatch }, payload) {
		try {
			const { data } = await lookupApi.cases(payload)
			commit('SET_CASES', data)
		} catch (error) {
			dispatch('notify', {
				text: 'Can not lookup cases',
				color: 'error'
			}, { root: true })
		}
	},
}

export default {
	namespaced: true,
	state,
	getters,
	actions,
	mutations,
}