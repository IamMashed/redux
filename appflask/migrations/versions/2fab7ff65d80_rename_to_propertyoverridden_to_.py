"""rename to PropertyOverridden to PropertyOriginal

Revision ID: 2fab7ff65d80
Revises: 312948659d0d
Create Date: 2020-04-15 23:50:25.730627

"""
import geoalchemy2
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2fab7ff65d80'
down_revision = '312948659d0d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property_original',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('apn', sa.String(), nullable=False),
                    sa.Column('county', sa.String(), nullable=False),
                    sa.Column('school_district', sa.Integer(), nullable=True),
                    sa.Column('section', sa.String(), nullable=True),
                    sa.Column('block', sa.String(), nullable=True),
                    sa.Column('undefined_field', sa.String(), nullable=True),
                    sa.Column('print_key', sa.String(), nullable=True),
                    sa.Column('lot', sa.String(), nullable=True),
                    sa.Column('village', sa.String(), nullable=True),
                    sa.Column('address', sa.String(), nullable=True),
                    sa.Column('street', sa.String(), nullable=True),
                    sa.Column('number', sa.String(), nullable=True),
                    sa.Column('town', sa.String(), nullable=False),
                    sa.Column('state', sa.String(), nullable=True),
                    sa.Column('zip', sa.Integer(), nullable=True),
                    sa.Column('latitude', sa.Float(), nullable=True),
                    sa.Column('longitude', sa.Float(), nullable=True),
                    sa.Column('coordinate_x', sa.Float(), nullable=True),
                    sa.Column('coordinate_y', sa.Float(), nullable=True),
                    sa.Column('geo', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=True),
                    sa.Column('is_condo', sa.Boolean(), nullable=True),
                    sa.Column('is_listed', sa.Boolean(), nullable=True),
                    sa.Column('property_class', sa.Integer(), nullable=True),
                    sa.Column('building_code', sa.Integer(), nullable=True),
                    sa.Column('data_composite', sa.ARRAY(sa.Integer()), nullable=True),
                    sa.Column('age', sa.Integer(), nullable=True),
                    sa.Column('hamlet', sa.String(), nullable=True),
                    sa.Column('gla_sqft', sa.Float(), nullable=True),
                    sa.Column('waterfront', sa.Boolean(), nullable=True),
                    sa.Column('rooms', sa.Integer(), nullable=True),
                    sa.Column('kitchens', sa.Integer(), nullable=True),
                    sa.Column('full_baths', sa.Integer(), nullable=True),
                    sa.Column('half_baths', sa.Integer(), nullable=True),
                    sa.Column('bedrooms', sa.Integer(), nullable=True),
                    sa.Column('fireplaces', sa.Integer(), nullable=True),
                    sa.Column('property_style', sa.String(), nullable=True),
                    sa.Column('garages', sa.Integer(), nullable=True),
                    sa.Column('garage_type', sa.Integer(), nullable=True),
                    sa.Column('basement_type', sa.Integer(), nullable=True),
                    sa.Column('heat_type', sa.String(), nullable=True),
                    sa.Column('gas', sa.Boolean(), nullable=True),
                    sa.Column('patio_type', sa.Integer(), nullable=True),
                    sa.Column('porch_type', sa.Integer(), nullable=True),
                    sa.Column('sewer_type', sa.Integer(), nullable=True),
                    sa.Column('water_type', sa.Integer(), nullable=True),
                    sa.Column('pool', sa.Boolean(), nullable=True),
                    sa.Column('price_per_sqft', sa.Float(), nullable=True),
                    sa.Column('lot_size', sa.Float(), nullable=True),
                    sa.Column('location', sa.Integer(), nullable=True),
                    sa.Column('condition', sa.String(), nullable=True),
                    sa.Column('story_height', sa.Float(), nullable=True),
                    sa.Column('paving_type', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_property_original_address'), 'property_original', ['address'], unique=False)
    op.create_index(op.f('ix_property_original_apn'), 'property_original', ['apn'], unique=False)
    op.create_index(op.f('ix_property_original_block'), 'property_original', ['block'], unique=False)
    op.create_index(op.f('ix_property_original_county'), 'property_original', ['county'], unique=False)
    op.create_index(op.f('ix_property_original_lot'), 'property_original', ['lot'], unique=False)
    op.create_index(op.f('ix_property_original_number'), 'property_original', ['number'], unique=False)
    op.create_index(op.f('ix_property_original_print_key'), 'property_original', ['print_key'], unique=False)
    op.create_index(op.f('ix_property_original_school_district'), 'property_original', ['school_district'],
                    unique=False)
    op.create_index(op.f('ix_property_original_section'), 'property_original', ['section'], unique=False)
    op.create_index(op.f('ix_property_original_state'), 'property_original', ['state'], unique=False)
    op.create_index(op.f('ix_property_original_street'), 'property_original', ['street'], unique=False)
    op.create_index(op.f('ix_property_original_town'), 'property_original', ['town'], unique=False)
    op.create_index(op.f('ix_property_original_undefined_field'), 'property_original', ['undefined_field'],
                    unique=False)
    op.create_index(op.f('ix_property_original_village'), 'property_original', ['village'], unique=False)
    op.create_index(op.f('ix_property_original_zip'), 'property_original', ['zip'], unique=False)

    op.drop_index('ix_property_overridden_address', table_name='property_overridden')
    op.drop_index('ix_property_overridden_apn', table_name='property_overridden')
    op.drop_index('ix_property_overridden_block', table_name='property_overridden')
    op.drop_index('ix_property_overridden_county', table_name='property_overridden')
    op.drop_index('ix_property_overridden_lot', table_name='property_overridden')
    op.drop_index('ix_property_overridden_print_key', table_name='property_overridden')
    op.drop_index('ix_property_overridden_school_district', table_name='property_overridden')
    op.drop_index('ix_property_overridden_section', table_name='property_overridden')
    op.drop_index('ix_property_overridden_undefined_field', table_name='property_overridden')
    op.drop_table('property_overridden')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('property_overridden',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('apn', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('county', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('school_district', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('section', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('block', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('undefined_field', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('print_key', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('lot', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('village', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('street', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('number', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('town', sa.VARCHAR(), autoincrement=False, nullable=False),
                    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('zip', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('coordinate_x', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('coordinate_y', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('is_condo', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.Column('is_listed', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.Column('property_class', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('building_code', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('data_composite', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
                    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('hamlet', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('gla_sqft', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('waterfront', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.Column('rooms', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('kitchens', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('full_baths', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('half_baths', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('bedrooms', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('fireplaces', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('property_style', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('garages', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('garage_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('basement_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('heat_type', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('gas', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.Column('patio_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('porch_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('sewer_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('water_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('pool', sa.BOOLEAN(), autoincrement=False, nullable=True),
                    sa.Column('price_per_sqft', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('lot_size', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('location', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('condition', sa.VARCHAR(), autoincrement=False, nullable=True),
                    sa.Column('story_height', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False,
                              nullable=True),
                    sa.Column('paving_type', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('geo', geoalchemy2.types.Geometry(geometry_type='POINT'), autoincrement=False,
                              nullable=True),
                    sa.PrimaryKeyConstraint('id', name='property_overridden_pkey')
                    )
    op.create_index('ix_property_overridden_undefined_field', 'property_overridden', ['undefined_field'], unique=False)
    op.create_index('ix_property_overridden_section', 'property_overridden', ['section'], unique=False)
    op.create_index('ix_property_overridden_school_district', 'property_overridden', ['school_district'], unique=False)
    op.create_index('ix_property_overridden_print_key', 'property_overridden', ['print_key'], unique=False)
    op.create_index('ix_property_overridden_lot', 'property_overridden', ['lot'], unique=False)
    op.create_index('ix_property_overridden_county', 'property_overridden', ['county'], unique=False)
    op.create_index('ix_property_overridden_block', 'property_overridden', ['block'], unique=False)
    op.create_index('ix_property_overridden_apn', 'property_overridden', ['apn'], unique=False)
    op.create_index('ix_property_overridden_address', 'property_overridden', ['address'], unique=False)

    op.drop_index(op.f('ix_property_original_zip'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_village'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_undefined_field'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_town'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_street'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_state'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_section'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_school_district'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_print_key'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_number'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_lot'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_county'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_block'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_apn'), table_name='property_original')
    op.drop_index(op.f('ix_property_original_address'), table_name='property_original')
    op.drop_table('property_original')
    # ### end Alembic commands ###
