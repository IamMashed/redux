"""assessment_dates improvements

Revision ID: 49a671fce3ce
Revises: 5400f5bfc400
Create Date: 2020-03-09 01:58:43.309376

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.

revision = '49a671fce3ce'
down_revision = '5400f5bfc400'
branch_labels = None
depends_on = None


def upgrade():
    op.add_column('assessment_dates', sa.Column('tax_year', sa.Integer(), nullable=True))
    op.add_column('assessment_dates', sa.Column('valuation_date', sa.Date(), nullable=True))
    op.create_unique_constraint('uc_county_valuation_date_type', 'assessment_dates',
                                ['county', 'assessment_type', 'valuation_date'])

    op.drop_column('assessment_dates', 'assessment_month')
    op.drop_column('assessment_dates', 'assessment_year')
    op.drop_column('assessment_dates', 'village')

    op.execute(
        '''
        update assessment_dates set tax_year = 2020, valuation_date = '2019/03/01' where id = 1;
        update assessment_dates set tax_year = 2020, valuation_date = '2016/06/01' where id = 2;
        update assessment_dates set tax_year = 2020, valuation_date = '2019/02/01' where id = 3;
        update assessment_dates set tax_year = 2020, valuation_date = '2019/01/01' where id = 4;
        update assessment_dates set tax_year = 2020, valuation_date = '2019/03/01' where id = 5;
        update assessment_dates set tax_year = 2020, valuation_date = '2020/03/01' where id = 6;
        '''
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('assessment_dates', sa.Column('village', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('assessment_dates', sa.Column(
        'assessment_year', sa.INTEGER(), autoincrement=False, nullable=False, server_default='2019'))
    op.add_column('assessment_dates', sa.Column('assessment_month', sa.INTEGER(), autoincrement=False, nullable=False,
                                                server_default='1'))
    op.drop_constraint('uc_county_valuation_date_type', 'assessment_dates', type_='unique')
    op.drop_column('assessment_dates', 'valuation_date')
    op.drop_column('assessment_dates', 'tax_year')

    op.execute(
        '''
        update assessment_dates set village = 'village1', assessment_type = 1, assessment_year = 2019,
        assessment_month = 3 where id = 1;
        update assessment_dates set assessment_type = 1, assessment_year = 2016, assessment_month = 6 where id = 2;
        update assessment_dates set assessment_type = 1, assessment_year = 2019, assessment_month = 2 where id = 3;
        update assessment_dates set assessment_type = 1, assessment_year = 2019, assessment_month = 1 where id = 4;
        update assessment_dates set assessment_type = 1, assessment_year = 2019, assessment_month = 3 where id = 5;
        update assessment_dates set assessment_type = 2, assessment_year = 2020, assessment_month = 3 where id = 6;
        
        '''
    )

    # ### end Alembic commands ###
