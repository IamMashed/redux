"""empty message

Revision ID: bf944115fb0d
Revises: 9621e5fadd1e
Create Date: 2020-01-06 20:46:39.179773

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bf944115fb0d'
down_revision = '9621e5fadd1e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('properties_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('county', sa.String(), nullable=True),
    sa.Column('town', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['properties_rules.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('county', 'town', name='area_composite')
    )
    op.create_table('inventory_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('price_start', sa.Integer(), nullable=True),
    sa.Column('price_end', sa.Integer(), nullable=True),
    sa.Column('full_bath', sa.Integer(), nullable=True),
    sa.Column('half_bath', sa.Integer(), nullable=True),
    sa.Column('gla_sqft', sa.Integer(), nullable=True),
    sa.Column('lot_sqft', sa.Integer(), nullable=True),
    sa.Column('garage', sa.Integer(), nullable=True),
    sa.Column('basement_prices', sa.ARRAY(sa.Integer()), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['properties_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('selection_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('proximity_range', sa.Numeric(precision=10, scale=3), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('sale_days_before_assessment', sa.Integer(), nullable=True),
    sa.Column('sale_days_after_assessment', sa.Integer(), nullable=True),
    sa.Column('percent_gla_lower', sa.Integer(), nullable=True),
    sa.Column('percent_gla_higher', sa.Integer(), nullable=True),
    sa.Column('percent_sale_lower', sa.Integer(), nullable=True),
    sa.Column('percent_sale_higher', sa.Integer(), nullable=True),
    sa.Column('same_property_class', sa.Boolean(), nullable=True),
    sa.Column('same_one_family_types', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('same_school_district', sa.Boolean(), nullable=True),
    sa.Column('same_town', sa.Boolean(), nullable=True),
    sa.Column('same_street', sa.Boolean(), nullable=True),
    sa.Column('same_property_style', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['properties_rules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('inventory_rule')
    op.drop_table('rule_set')
    op.drop_table('selection_rule')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory_rule',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('rule_set', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price_start', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price_end', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('full_bath', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('half_bath', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gla_sqft', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lot_sqft', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('garage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('basement_prices', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['rule_set'], ['rule_set.id'], name='inventory_rule_rule_set_fkey'),
    sa.PrimaryKeyConstraint('id', name='inventory_rule_pkey')
    )
    op.create_table('selection_rule',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('selection_rule_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('proximity_range', sa.NUMERIC(precision=10, scale=3), autoincrement=False, nullable=False),
    sa.Column('sale_days_delta', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gla_range', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('same_school_district', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('same_town', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('same_street', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('same_property_style', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('same_property_class', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='selection_rule_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('rule_set',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('town', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('selection_rule', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['selection_rule'], ['selection_rule.id'], name='rule_set_sr_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='rule_set_pkey')
    )
    op.drop_table('selection_rules')
    op.drop_table('inventory_rules')
    op.drop_table('properties_rules')
    # ### end Alembic commands ###
