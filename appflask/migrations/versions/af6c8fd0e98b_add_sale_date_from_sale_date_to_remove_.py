"""add sale_date_from, sale_date_to, remove days before, after in selection rules table

Revision ID: af6c8fd0e98b
Revises: 5400f5bfc400
Create Date: 2020-03-06 20:47:53.027712

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'af6c8fd0e98b'
down_revision = '5400f5bfc400'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('selection_rules', sa.Column('sale_date_from', sa.Date(), nullable=True))
    op.add_column('selection_rules', sa.Column('sale_date_to', sa.Date(), nullable=True))
    op.drop_column('selection_rules', 'sale_days_after_assessment')
    op.drop_column('selection_rules', 'sale_days_before_assessment')

    # order of the command executions is important, since new columns must be created first
    op.execute(
        '''
        update selection_rules 
        set sale_date_from = '2017/01/01', sale_date_to = '2020/03/01';
                
        '''
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'selection_rules',
        sa.Column('sale_days_before_assessment', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.add_column(
        'selection_rules',
        sa.Column('sale_days_after_assessment', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_column('selection_rules', 'sale_date_to')
    op.drop_column('selection_rules', 'sale_date_from')
    # ### end Alembic commands ###
